[env]
CARGO_MAKE_EXTEND_WORKSPACE_MAKEFILE = true
CARGO_MAKE_RUN_TARGET = "voxel_game"

[env.development]
BUILD_TYPE = "debug"

[env.release]
BUILD_TYPE = "release"

[config]
skip_core_tasks = true

[tasks.default]
workspace = false
alias = "build"

### BUILD ##

[tasks.build]
workspace = false
alias = "build_flow"

[tasks.build_flow]
workspace = false
dependencies = [
  "build_debug",
  "build_release",
  "copy_resources"
]

[tasks.build_debug]
workspace = false
condition = { profiles = ["development"] }
command = "cargo"
args = [
  "build"
]

[tasks.build_release]
workspace = false
condition = { profiles = ["release"] }
command = "cargo"
args = [
  "build",
  "--release"
]

### RUN ##

[tasks.run]
workspace = false
alias = "run_flow"

[tasks.run_flow]
workspace = false
dependencies = [
  "build",
  "run_debug",
  "run_release",
]

[tasks.run_debug]
workspace = false
condition = { profiles = ["development"] }
command = "cargo"
args = [
  "run",
  "--bin", 
  "${CARGO_MAKE_RUN_TARGET}"
]

[tasks.run_release]
workspace = false
condition = { profiles = ["release"] }
command = "cargo"
args = [
  "run",
  "--release", 
  "--bin", 
  "${CARGO_MAKE_RUN_TARGET}"
]

### OTHER ###

[tasks.copy_resources]
workspace = false
condition = { files_modified = { input = ["${CARGO_MAKE_WORKING_DIRECTORY}/Cargo.toml", "./${CARGO_MAKE_RUN_TARGET}/assets/**/*"], output = ["./target/${BUILD_TYPE}/assets/**/*"] } }
script_runner = "@shell"
script = '''
  cp -rf ./${CARGO_MAKE_RUN_TARGET}/assets ./target/${BUILD_TYPE}/assets/
'''
dependencies = ["del_resources"]

[tasks.del_resources]
workspace = false
condition = { files_exist = ["./target/${BUILD_TYPE}/assets"] }
script_runner = "@shell"
script = '''
  rm -rf ./target/${BUILD_TYPE}/assets
'''